@import url('https://fonts.googleapis.com/css2?family=Satisfy&family=Work+Sans:wght@100;200;300;400;500;600&display=swap');

@import url('https://fonts.googleapis.com/css2?family=Courgette&family=Redressed&family=Satisfy&family=Work+Sans:wght@100;200;300;400;500;600&display=swap');

.glow {
  font-size: 35px;
  font-weight: 600;
  font-family: sans-serif;
  margin-left: 45px;
  color: rgb(0, 0, 47);
  font-family: 'Redressed', cursive;
}
/* Global Styles */
:root {
  --primary-color: #17a2b8;
  --dark-color: #343a40;
  --light-color: #f4f4f4;
  --danger-color: #dc3545;
  --success-color: #28a745;
}
.badge {
  font-size: 0.8rem;
  padding: 0.1rem;
  text-align: center;
  margin: 0.3rem;
  background: var(--light-color);
  color: #333;
}

.alert {
  padding: 0.8rem;
  margin: 1rem 0;
  opacity: 1;
  background: var(--light-color);
  color: #333;
  font-weight: 600;
  font-size: 15px;
  z-index: 1000;
}

.btn-primary,
.bg-primary,
.badge-primary,
.alert-primary {
  background: var(--primary-color);
  color: #fff;
}

.btn-light,
.bg-light,
.badge-light,
.alert-light {
  background: var(--light-color);
  color: #333;
}

.btn-dark,
.bg-dark,
.badge-dark,
.alert-dark {
  background: var(--dark-color);
  color: #fff;
}

.btn-danger,
.bg-danger,
.badge-danger,
.alert-danger {
  background: var(--danger-color);
  color: #fff;
}

.btn-success,
.bg-success,
.badge-success,
.alert-success {
  background: var(--success-color);
  color: #fff;
}

.btn-white,
.bg-white,
.badge-white,
.alert-white {
  background: #fff;
  color: #333;
  border: #ccc solid 1px;
}

.btn:hover {
  opacity: 0.8;
}

.bg-light,
.badge-light {
  border: #ccc solid 1px;
}
.alert-wrapper {
  position: fixed;
  top: 4rem;
  right: 2rem;
  display: inline-block;
  z-index: 10000;
}
.anime_link {
  text-decoration: none;
  color: #000;
  outline: none;
  /* font-size: 55px; */
}

.anime_link:hover {
  color: #000;
  outline: none;
}

/* https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible */
.anime_link:focus,
.button_anime:focus {
  /* Provide a fallback style for browsers
 that don't support :focus-visible */
  outline: none;
  background: lightgrey;
}

.anime_link:focus:not(:focus-visible),
.button_anime:focus:not(:focus-visible) {
  /* Remove the focus indicator on mouse-focus for browsers
 that do support :focus-visible */
  background: transparent;
}

.anime_link:focus-visible,
.button_anime:focus-visible {
  /* Draw a very noticeable focus style for
 keyboard-focus on browsers that do support
 :focus-visible */
  outline: 2px solid red;
  background: transparent;
}
.content__item {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  counter-increment: itemcounter;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative;
}
.content__item::before {
  color: #000;
  position: absolute;
  top: 0;
  left: 0;
  content: counters(itemcounter, ".", decimal-leading-zero);
}

.button--atlas {
font-family: signo, sans-serif;
font-weight: 500;
}

.button--atlas > span {
display: inline-block;
}

.button--atlas:hover > span {
opacity: 0;
}

.marquee {
position: absolute;
top: 0;
left: 0;
width: 100%;
overflow: hidden;
pointer-events: none;
}

.marquee__inner {
width: fit-content;
display: flex;
position: relative;
--offset: 1rem;
--move-initial: calc(-25% + var(--offset));
--move-final: calc(-50% + var(--offset));
transform: translate3d(var(--move-initial), 0, 0);
animation: marquee 1s linear infinite;
animation-play-state: paused;
opacity: 0;
}

.button--atlas:hover .marquee__inner {
animation-play-state: running;
opacity: 1;
transition-duration: 0.4s;
}

.marquee span {
text-align: center;
white-space: nowrap;
font-style: italic;
padding: 1.5rem 0.5rem;
}

@keyframes marquee {
0% {
  transform: translate3d(var(--move-initial), 0, 0);
}

100% {
  transform: translate3d(var(--move-final), 0, 0);
}
}

.button--anthe {
font-family: bely-display, sans-serif;
color: #000;
background: none;
}

.button--anthe::before {
content: '';
background: #000;
-webkit-clip-path: polygon(0% 0%, 100% 0, 100% 50%, 100% 100%, 0% 100%);
clip-path: polygon(0% 0%, 100% 0, 100% 50%, 100% 100%, 0% 100%);
transition: clip-path 0.4s cubic-bezier(0.2, 1, 0.8, 1), -webkit-clip-path 0.4s cubic-bezier(0.2, 1, 0.8, 1);
}

.button--anthe:hover::before {
background: #000;
-webkit-clip-path: polygon(0% 0%, 75% 0%, 100% 50%, 75% 100%, 0% 100%);
clip-path: polygon(0% 0%, 75% 0%, 100% 50%, 75% 100%, 0% 100%);
}

.button--anthe span {
display: block;
mix-blend-mode: difference;
transition: transform 0.4s cubic-bezier(0.2, 1, 0.8, 1);
}

.button--anthe:hover span {
transform: translate3d(-10px,0,0);
}

.button--calypso {
overflow: hidden;
font-family: freight-display-pro, serif;
font-size: 1.15rem;
border-radius: 0.85rem;
color: #fff;
}

.button--calypso span {
display: block;
position: relative;
mix-blend-mode: difference;
z-index: 10;
}

.button--calypso:hover span {
animation: MoveScaleUpInitial 0.3s forwards, MoveScaleUpEnd 0.3s forwards 0.3s;
}

@keyframes MoveScaleUpInitial {
to {
  transform: translate3d(0,-105%,0) scale3d(1,2,1);
  opacity: 0;
}
}

@keyframes MoveScaleUpEnd {
from {
  transform: translate3d(0,100%,0) scale3d(1,2,1);
  opacity: 0;
}
to {
  transform: translate3d(0,0,0);
  opacity: 1;
}
}

.button--calypso::before {
content: '';
background: #000;
width: 120%;
height: 0;
padding-bottom: 120%;
top: -110%;
left: -10%;
border-radius: 50%;
transform: translate3d(0,68%,0) scale3d(0,0,0);
}

.button--calypso:hover::before {
transform: translate3d(0,0,0) scale3d(1,1,1);
transition: transform 0.4s cubic-bezier(0.1, 0, 0.3, 1);
}

.button--calypso::after {
content: '';
background: #e7e7e7;
transform: translate3d(0,-100%,0);
transition: transform 0.4s cubic-bezier(0.1, 0, 0.3, 1);
}

.button--calypso:hover::after {
transform: translate3d(0,0,0);
transition-duration: 0.05s;
transition-delay: 0.4s;
transition-timing-function: linear;
}

.button_anime{
pointer-events: auto;
cursor: pointer;
background: #e7e7e7;
border: none;
padding: 1.5rem 3rem;
margin: 0;
font-family: inherit;
font-size: inherit;
position: relative;
display: inline-block;
}

.button_anime::before,
.button_anime::after {
position: absolute;
top: 0;
left: 0;
width: 100%;
height: 100%;
}
.button--greip {
overflow: hidden;
color: #fff;
font-family: input-mono-narrow, monospace;
font-weight: 500;
padding: 1rem 2rem;
}

.button--greip span {
display: block;
position: relative;
}

.button--greip > span {
overflow: hidden;
mix-blend-mode: difference;
}

.button--greip:hover > span > span {
animation: MoveUpInitial 0.2s forwards, MoveUpEnd 0.2s forwards 0.2s;
}

.button--greip::before {
content: '';
background-color: #0e013d;
width: 100%;
height: 100%;
transform-origin: 50% 100%;
-webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
transition: clip-path 0.2s, -webkit-clip-path 0.2s;
transition-timing-function: cubic-bezier(0.7, 0, 0.2, 1);
}

.button--greip:hover::before {
transition-duration: 0.3s;
-webkit-clip-path: polygon(0 0, 100% 0, 0 0, 0% 100%);
clip-path: polygon(0 0, 100% 0, 0 0, 0% 100%);
}

.button--telesto {
overflow: hidden;
font-family: obvia, sans-serif;
font-weight: 800;
font-style: italic;
font-size: 1.15rem;
color: #fff;
}

.button--telesto span {
display: block;
position: relative;
z-index: 1;
}

.button--telesto > span {
overflow: hidden;
mix-blend-mode: difference;
}

.button--telesto:hover > span > span {
animation: MoveRightInitial 0.1s forwards, MoveRightEnd 0.3s forwards 0.2s;
}

@keyframes MoveRightInitial {
to {
  transform: translate3d(105%,0,0);
}
}

@keyframes MoveRightEnd {
from {
  transform: translate3d(-100%,0,0);
}
to {
  transform: translate3d(0,0,0);
}
}

.button--telesto::before,
.button--telesto::after {
content: '';
background: #000;
}

.button--telesto::before {
width: 135%;
-webkit-clip-path: polygon(75% 0%, 100% 50%, 75% 100%, 0% 100%, 0% 0%);
clip-path: polygon(75% 0%, 100% 50%, 75% 100%, 0% 100%, 0% 0%);
transform: translate3d(-100%,0,0);
}

.button--telesto:hover::before {
transform: translate3d(0,0,0);
transition: transform 0.3s cubic-bezier(0.7, 0, 0.2, 1);
}

.button--telesto::after {
width: 105%;
transform: translate3d(100%,0,0);
transition: transform 0.3s cubic-bezier(0.7, 0, 0.2, 1);
}

.button--telesto:hover::after {
transform: translate3d(0,0,0);
transition: transform 0.01s 0.3s cubic-bezier(0.7, 0, 0.2, 1);
}

.button--mimas {
text-transform: uppercase;
letter-spacing: 0.05rem;
font-weight: 700;
font-size: 0.85rem;
border-radius: 0.5rem;
overflow: hidden;
color: #fff;
background: #e7e7e7;
}

.button--mimas span {
position: relative;
mix-blend-mode: difference;
}

.button--mimas::before {
content: '';
background-color: #0e013d;
width: 120%;
left: -10%;
transform: skew(30deg);
transition: transform 0.4s cubic-bezier(0.3, 1, 0.8, 1);
}

.button--mimas:hover::before {
transform: translate3d(100%,0,0);
}

.button--hyperion {
font-family: input-mono-narrow, monospace;
font-weight: 500;
padding: 1rem 1.5rem;
border: 1px solid #000;
overflow: hidden;
color: #fff;
}

.button--hyperion span {
display: block;
position: relative;
}

.button--hyperion > span {
overflow: hidden;
}

.button--hyperion > span > span {
overflow: hidden;
mix-blend-mode: difference;
}

.button--hyperion:hover > span > span {
animation: MoveUpInitial 0.2s forwards, MoveUpEnd 0.2s forwards 0.2s;
}

@keyframes MoveUpInitial {
to {
  transform: translate3d(0,-105%,0);
}
}

@keyframes MoveUpEnd {
from {
  transform: translate3d(0,100%,0);
}
to {
  transform: translate3d(0,0,0);
}
}

.button--hyperion::before {
content: '';
background-color: #0e013d;
transition: transform 0.3s cubic-bezier(0.7, 0, 0.2, 1);
transform-origin: 100% 50%;
}

.button--hyperion:hover::before {
transform: scale3d(0,1,1);
transform-origin: 0% 50%;
}

.link {
  cursor: pointer;
  font-size: 18px;
  position: relative;
  white-space: nowrap;
  color: #000;
  text-decoration: none;
}

.link::before,
.link::after {
  position: absolute;
  width: 100%;
  height: 1px;
  background: currentColor;
  top: 100%;
  left: 0;
  pointer-events: none;
}

.link::before {
  content: '';
  /* show by default */
}
.link--thebe {
  font-family: angie-sans, sans-serif;
  text-transform: uppercase;
}

.link--thebe::before {
  transform-origin: 100% 50%;
  transform: scale3d(0, 1, 1);
  transition: transform 0.3s cubic-bezier(0.2, 1, 0.8, 1);
}

.link--thebe:hover::before {
  transform-origin: 0% 50%;
  transform: scale3d(1, 2, 1);
  transition-timing-function: cubic-bezier(0.7, 0, 0.2, 1);
}

.link--thebe::after {
  content: '';
  top: calc(100% + 4px);
  transform-origin: 100% 50%;
  transform: scale3d(0, 1, 1);
  transition: transform 0.4s 0.1s cubic-bezier(0.2, 1, 0.8, 1);
}

.link--thebe:hover::after {
  transform-origin: 0% 50%;
  transform: scale3d(1, 1, 1);
  transition-timing-function: cubic-bezier(0.7, 0, 0.2, 1);
}

.link--leda {
  overflow: hidden;
  line-height: 2;
  font-family: orpheuspro, serif;
  font-weight: 700;
}

.link--leda::before {
  height: 2px;
  top: calc(100% - 5px);
  transform-origin: 100% 50%;
  transform: scale3d(0, 1, 1);
  transition: transform 0.3s cubic-bezier(0.5, 0.5, 0.3, 1);
}

.link--leda:hover::before {
  transform-origin: 0% 50%;
  transform: scale3d(1, 1, 1);
}

.link--leda::after {
  content: attr(data-text);
  height: 100%;
  top: 0;
  background: none;
  transform-origin: 100% 50%;
  transform: translate3d(150%, 0, 0);
  transition: transform 0.3s cubic-bezier(0.5, 0.5, 0.3, 1);
}

.link--leda:hover::after {
  transform: translate3d(0, 0, 0);
}

.link--leda span {
  display: inline-block;
  transition: transform 0.3s cubic-bezier(0.5, 0.5, 0.3, 1);
}

.link--leda:hover span {
  transform: translate3d(-150%, 0, 0);
}